
apply plugin: 'java'
apply plugin: 'maven'
sourceCompatibility = 1.7
targetCompatibility = 1.7

final String androidHome=System.getenv("ANDROID_HOME")
final String androidVer=22
final String androidJarPath=androidHome+"/platforms/android-"+androidVer

archivesBaseName = 'libtanudjaja-android-common'
version = '1.1.0'
group = 'id.web.tanudjaja.android'

repositories
{
	mavenCentral()
	mavenLocal()
	flatDir { dirs androidJarPath }
}

dependencies
{
	compile name: 'android'
	testCompile 'junit:junit:4.12'
}

install.repositories.mavenInstaller.pom.whenConfigured
{
	pom -> pom.dependencies.removeAll { it.scope == "compile" }
}

//task(install, dependsOn: build) <<
//{
//	final String output=libsDir.getAbsolutePath() + '/' + archivesBaseName + '-' + version + '.jar'
//	File f = file(output)
//	if(f.exists())
//	{
//		copy
//		{
//			from output
//			into androidLibRepo
//		}
//		println 'Installation success.'
//	}
//	else
//	{
//		println 'Installation failed. File ' + output + ' not found.'
//	}
//}

//configure(install)
//{
//	group = 'Install'
//	description = 'Installs the jar to ' + androidLibRepo
//}

//task(uninstall) <<
//{
//	final String installedFile=androidLibRepo + '/' + archivesBaseName + '-' + version + '.jar'
//	delete installedFile
//}

//configure(uninstall)
//{
//	group = 'Install'
//	description = 'Removes the installed jar from ' + androidLibRepo
//}

task (distclean, dependsOn: clean) <<
{
	delete ".gradle"
}

configure(distclean)
{
	group = 'Build'
	description = 'Clean the build result and the .gradle directory'
}

test
{
	testLogging
	{
		events 'started', 'passed'
	}
}

